---

- name: -TGZ- Check for the presence of /home/{{ os_user }}/{{ splunk_tgz }}
  stat: 
    path: /home/{{ os_user }}/{{ splunk_tgz }}
    get_checksum: yes  
    checksum_algorithm: md5
  register: splunk_tgz_downloaded_flag
  become: yes

- name: -TGZ- Download (wget) {{ splunk_tgz }}
  get_url:
    url: https://www.splunk.com/bin/splunk/DownloadActivityServlet?architecture=x86_64&platform=linux&version={{ splunk_version }}&product=splunk&filename={{ splunk_tgz }}&wget=true
    checksum: "md5:{{ splunk_tgz_checksum }}"
    dest: /home/{{ os_user }}
    mode: '0640'  
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
    timeout: 20
  become: yes
  when: splunk_tgz_downloaded_flag.stat.exists == False and download_tgz_from_splunk_servers

- name: -TGZ- Upload ./files/{{ splunk_tgz }} (local) to /home/{{ os_user }}/ (remote)
  copy:
    src: "files/{{ splunk_tgz }}"
    dest: /home/{{ os_user }}
    mode: '0640'
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
  become: yes
  when: splunk_tgz_downloaded_flag.stat.exists == False and not download_tgz_from_splunk_servers  


- name: Check if Splunk has ever been run via initd
  stat: 
    path: /etc/init.d/splunk
  register: initd_run_flag

- name: Check if Splunk has ever been run via systemd
  stat: 
    path: /etc/systemd/system/Splunkd.service
  register: systemd_run_flag

- name: -initd- Stop Splunk pre-upgrade
  command: "{{ splunk_home }}/bin/splunk stop"
  become: yes  
  when: initd_run_flag.stat.exists == True

- name: -systemd- Stop Splunk pre-upgrade
  systemd:
    name: Splunkd
    state: stopped
  become: yes
  when: systemd_run_flag.stat.exists == True

- name: Extract {{ splunk_tgz }} over {{ splunk_home }} to upgrade
  unarchive:
    src: /home/{{ os_user }}/{{ splunk_tgz }}
    dest: "{{ splunk_home }}/.."
    remote_src: yes
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
  become: yes

- name: -initd- Start Splunk for the first time post upgrade
  command: "{{ splunk_home }}/bin/splunk start --accept-license --answer-yes"
  become: yes  
  when: 
    - install_method == "initd"

- name: -systemd- For initd -> systemd upgrades remove initd script
  command: "{{ splunk_home }}/bin/splunk disable boot-start --no-prompt --answer-yes --accept-license"
  become: yes
  when: 
    - install_method == "systemd"

- name: -systemd & Splunk 7.2- For initd -> systemd upgrade rebuild systemd script
  command: "{{ splunk_home }}/bin/splunk enable boot-start -user {{ os_user }}"
  become: yes
  when: 
    - install_method == "systemd"  
    - splunk_version is version('7.2.2', '>=')
    - splunk_version is version('7.3', '<')    

- name: -systemd & Splunk 7.3- For initd -> systemd upgrade rebuild systemd script
  command: "{{ splunk_home }}/bin/splunk enable boot-start -systemd-managed 1 -user {{ os_user }} --no-prompt --answer-yes --accept-license"
  become: yes
  when: 
    - install_method == "systemd"  
    - splunk_version is version('7.3', '>=')   

- name: -systemd & Ubuntu- Fix the /etc/systemd/system/Splunkd.service file for Ubuntu support
  replace:
    path: /etc/systemd/system/Splunkd.service
    regexp: '\/init.scope'
    replace: ''
  become: yes 
  when: 
    - install_method == "systemd"  
    - ansible_distribution == "Ubuntu"    

- name: -systemd & Ubuntu- After Splunkd.service update reload the systemd daemon units
  command: systemctl daemon-reload
  become: yes 
  when: 
    - install_method == "systemd"  
    - ansible_distribution == "Ubuntu"      

- name: -systemd- Start Splunk for the first time post upgrade
  command: "systemctl start Splunkd"
  become: yes
  when: 
    - install_method == "systemd"
